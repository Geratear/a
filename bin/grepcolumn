#!/usr/bin/env python3
import click
from functools import reduce
import sys,csv

@click.command()
@click.option('-d', '--delimiter', default=',', help='Set delimiter')
@click.option('--tab', default=10, help='Set tab length')
@click.option('--titles', default=None, help='Set all titles')
@click.option('-t', '-tt', default=None, help='Set title type')
@click.option('--no-title', is_flag=True,)
@click.option('-od', '--out-delimiter', default=',',)
@click.option('--pretty', is_flag=True,)
@click.option('-f', '--fields', help='Select fields')
@click.argument('file', default=sys.stdin, type=click.File('r'))
def grepcolumn(file,tt, no_title, pretty, delimiter,out_delimiter, fields,titles, tab):
    '''
Usage: $ grepcolumn -f <fields> [<file>]

    $ cat test.csv
    name,gender,job
    Jack,male,coder
    Lucy,female,artist
    MM

    $ grepcolumn -f 'job,name' test.csv
	job       name
    --------------------
    coder     Jack
    artist    Lucy

    $ echo 'Jack,male,coder' | grepcolumn -f 'job,name' -c 'name,gender,job'
    $ echo 'Jack||male||coder' | grepcolumn -f 'job,name' -c 'name,gender,job' -d '||'
    $ echo 'name=Jack,gender=male,job=coder' | grepcolumn -f 'job,name'
    '''
    fields = fields.split(',')

    rows = csv.reader(file, delimiter=delimiter)
    # print titles and ----
    if not no_title:
        print(out_delimiter.join(fields).expandtabs(tab))
        if pretty:
            print('-'*tab*len(fields))
    if titles:
        titles = titles.split(',')
    elif tt is 'kv':
        pass
    elif tt is 'index':
        pass
    else:
        titles = next(rows)

    # csv.writer(f, delimiter =',',quotechar ='"',quoting=csv.QUOTE_MINIMAL)
    for row in rows:
        if titles:
            # log format: val1,val2,val3....
            data = dict(zip(titles, row))
        else:
            # log format: key1=val1,key2=val2,key3=val3....
            data = {}
            for item in row:
                k, v = item.split('=', 1)
                k = k.strip()
                if k in fields:
                    data[k] = v
        buffer = ''
        for k in fields:
            buffer += data.get(k, '')+out_delimiter
        buffer = buffer[:-1].expandtabs(tab)
        print(buffer)

grepcolumn()
